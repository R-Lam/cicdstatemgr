bases:
  - base1.yaml

jinja2-macros: 

  helloWorld: |
    {%- macro helloWorld(msg) -%}
      Hello world msg = {{msg}}
    {%- endmacro -%}

variables:
  myVar1: "test"

cicd-contexts:

  stage:
    channel: stage

    pipelines:
      build:
        event-handlers:

          testEvent:
            notify:
              message: |
                {{ basicMacro('testEventFired!!! yes...') }}

          testNotifyEvent:

            notify:
              message: |
                {{ basicMacro('build is successful') }}

              capture-response-data:
                - from: "{{ body.data.channel }}"
                  to: state.lastPostedToNotifyChannel
                - from: "{{ body|tojson }}"
                  to: state.lastPostedHttpResponse


          testRespondEvent:
            respond:
              if: "{{ state.lastPostedHttpResponse }}"
              url: "{{ (state.lastPostedHttpResponse|from_json).url }}"
              message: |
                dummy responder message for {{ state.lastPostedDataRandomId }}

          testSetValuesEvent:
            set-values: 
              extractLastPostedNotifyMessage:
                if:  |
                  {%- if state.lastPostedHttpResponse -%}
                    1
                  {%- endif -%}  
                set:
                  - from: |
                      {%- set lastPostedHttpResponse = (state.lastPostedHttpResponse|from_json) -%}
                      {{- lastPostedHttpResponse.data.message -}}
                    to: "state.lastPostedNotifyMessage"

          testTriggerPipelineEvent:
            # see config.yaml for additional headers
            # and auto-args that will supplement what is
            # specified here
            trigger-pipeline:
              name: build
              args:
                whatever: "{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}"

          testManualChoiceEvent:
            manual-choice:
              title: |
                {{ basicMacro('here are my choices') }}
              choices:
                choiceGroup1:
                  header: "Choice group one:"
                  options:
                    - text: "Choice 1"
                      value: "c1"
                    - text: "Choice 2"
                      value: "c2"

                choiceGroup2:
                  header: "Choice group two {{ echo('blah') }}:"
                  options:
                    - text: "{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}"
                      value: "{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}"

      # example of disabling something inheriterd from a base
      test:
        event-handlers:
          another-event:
            notify:
              enabled: False