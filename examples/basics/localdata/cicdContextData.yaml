channel: stage
pipelines:
  start:
    event-handlers:
      some-event:
        notify:
          message: '{{ basicMacro(''some-event fired in the start pipeline'') }}

            '
  build:
    event-handlers:
      testEvent:
        notify:
          message: '{{ basicMacro(''build is successful'') }}

            '
        trigger-pipeline:
          name: build
          args:
            whatever: '{{state.postedData.headers.userAgent}}'
        manual-choice:
          title: '{{ basicMacro(''here are my choices'') }}

            '
          choices:
            choiceGroup1:
              header: 'Choice group one:'
              options:
              - text: Choice 1
                value: c1
              - text: Choice 2
                value: c2
            choiceGroup2:
              header: 'Choice group two {{ echo(''blah'') }}:'
              options:
              - text: '{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}'
                value: '{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}'
appPipelinesConfig:
  bases:
  - base1.yaml
  jinja2-macros:
    helloWorld: "{%- macro helloWorld(msg) -%}\n  Hello world msg = {{msg}}\n{%- endmacro\
      \ -%}\n"
  variables:
    myVar1: test
  cicd-contexts:
    stage:
      channel: stage
      pipelines:
        build:
          event-handlers:
            testEvent:
              notify:
                message: '{{ basicMacro(''build is successful'') }}

                  '
              trigger-pipeline:
                name: build
                args:
                  whatever: '{{state.postedData.headers.userAgent}}'
              manual-choice:
                title: '{{ basicMacro(''here are my choices'') }}

                  '
                choices:
                  choiceGroup1:
                    header: 'Choice group one:'
                    options:
                    - text: Choice 1
                      value: c1
                    - text: Choice 2
                      value: c2
                  choiceGroup2:
                    header: 'Choice group two {{ echo(''blah'') }}:'
                    options:
                    - text: '{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}'
                      value: '{{state.postedData[state.lastPostedDataRandomId].headers.userAgent}}'
jinja2Macros:
  byName:
    basicMacro: "{%- macro basicMacro(msg) -%}\n  This is basicMacro! msg = {{msg}}\n\
      {%- endmacro -%}\n"
    echo: "{%- macro echo(msg) -%}\n  {{msg}}\n{%- endmacro -%}\n"
    random: "{%- macro random() -%}\n  {{ range(10000, 99999) | random }}\n{%- endmacro\
      \ -%}\n"
    helloWorld: "{%- macro helloWorld(msg) -%}\n  Hello world msg = {{msg}}\n{%- endmacro\
      \ -%}\n"
  all: "{%- macro basicMacro(msg) -%}\n  This is basicMacro! msg = {{msg}}\n{%- endmacro\
    \ -%}{%- macro echo(msg) -%}\n  {{msg}}\n{%- endmacro -%}{%- macro random() -%}\n\
    \  {{ range(10000, 99999) | random }}\n{%- endmacro -%}{%- macro helloWorld(msg)\
    \ -%}\n  Hello world msg = {{msg}}\n{%- endmacro -%}"
state:
  cicdContextDataId: context-data-id-1
  cicdContextName: stage
  key1: valuechanged
  testHeader2Value: myvalueforheader2
  triggerAutoArg1: '99999'
  postedData:
    '12191':
      body:
        message: This is basicMacro! msg = some-event fired in the start pipeline
      headers:
        userAgent: python-requests/2.24.0
  lastPostedDataRandomId: '12191'
variables:
  baseVar1: baseVarVal1
  myVar1: test
