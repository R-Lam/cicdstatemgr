
---

apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: deploy
spec:
  params:
    - name: cicdContextName
    - name: cicdContextDataId
    - name: targetAppName
    - name: targetAppTag
    - name: originalRequestBody
    - name: gitCloneUrl

    # for security checks
    - name: cicdContextName
    - name: invokerUid
    - name: relatedCicdContextDataId
    - name: relatedPipelineRunUid
    - name: relatedPipelineName
    - name: triggeredBySystem
    - name: triggeredByDescription

  resourcetemplates:

    #---------------------------
    # Deploy PipelineRun
    #---------------------------
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: deploy-$(tt.params.cicdContextName)-$(tt.params.targetAppName)-$(uid) # uid here is the tekton unique RUN id
      spec:
        serviceAccountName: cicd-tekton

        pipelineRef:
          name: deploy

        params:
          - name: pipelineRunUid
            value: deploy-$(tt.params.cicdContextName)-$(tt.params.targetAppName)-$(uid) # uid here is the tekton unique RUN id

          - name: cicdContextDataId 
            value: $(tt.params.cicdContextDataId) 

          - name: targetAppName
            value: $(tt.params.targetAppName) 

          - name: targetAppTag
            value: $(tt.params.targetAppTag) 

          - name: originalRequestBody
            value: $(tt.params.originalRequestBody)

          - name: gitCloneUrl
            value: $(tt.params.gitCloneUrl)

          # for security checks
          - name: cicdContextName
            value: $(tt.params.cicdContextName)
          - name: invokerUid
            value: $(tt.params.invokerUid)
          - name: relatedCicdContextDataId
            value: $(tt.params.relatedCicdContextDataId)
          - name: relatedPipelineRunUid
            value: $(tt.params.relatedPipelineRunUid)
          - name: relatedPipelineName
            value: $(tt.params.relatedPipelineName)
          - name: triggeredBySystem
            value: $(tt.params.triggeredBySystem)
          - name: triggeredByDescription
            value: $(tt.params.triggeredByDescription)

        workspaces:

          - name: cicdstatemgr-secrets
            secret:
              secretName: cicdstatemgr-secrets
              items:
                - key: cicdstatemgr-secrets.yaml
                  path: cicdstatemgr-secrets.yaml

          - name: cicdstatemgr-configs
            configmap:
              name: cicdstatemgr-configs

          - name: scratch
            volumeClaimTemplate:
              metadata:
                name: scratch
              spec:
                storageClassName: standard
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 50Mi


---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: deploy-via-trigger
spec:
  params:

    - name: cicdContextName
      value: $(body.intercepted.cicdContextName)

    - name: cicdContextDataId
      value: $(body.intercepted.cicdContextDataId)

    - name: targetAppName
      value: $(body.intercepted.targetAppName)

    - name: targetAppTag
      value: $(body.intercepted.targetAppTag)

    - name: originalRequestBody
      value: $(body)

    - name: gitCloneUrl
      value: $(body.gitCloneUrl)

    # for security checks
    - name: invokerUid
      value: $(body.intercepted.invokerUid)
    - name: relatedCicdContextDataId
      value: $(body.intercepted.relatedCicdContextDataId)
    - name: relatedPipelineRunUid
      value: $(body.intercepted.relatedPipelineRunUid)
    - name: relatedPipelineName
      value: $(body.intercepted.relatedPipelineName)
    - name: triggeredBySystem
      value: $(body.intercepted.triggeredBySystem)
    - name: triggeredByDescription
      value: $(body.intercepted.triggeredByDescription)

---


---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: deploy-via-slack
spec:
  params:

    - name: cicdContextName
      value: $(body.intercepted.cicdContextName)

    - name: cicdContextDataId
      value: $(body.intercepted.cicdContextDataId)

    - name: targetAppName
      value: $(body.intercepted.targetAppName)

    - name: targetAppTag
      value: $(body.intercepted.targetAppTag)

    - name: originalRequestBody
      value: $(body)

    - name: gitCloneUrl
      value: $(body.intercepted.gitCloneUrl)

    # for security checks
    - name: invokerUid
      value: $(body.intercepted.slackUsername)
    - name: relatedCicdContextDataId
      value: $(body.intercepted.relatedCicdContextDataId)
    - name: relatedPipelineRunUid
      value: $(body.intercepted.relatedPipelineRunUid)
    - name: relatedPipelineName
      value: $(body.intercepted.relatedPipelineName)
    - name: triggeredBySystem
      value: 'slack'
    - name: triggeredByDescription
      value: 'slack button press by <@$(body.intercepted.slackUserId)>'

---